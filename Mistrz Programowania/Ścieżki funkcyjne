/*
#include <iostream>
using namespace std;
int main() {
	int n,sum=0;
	cin >> n;
	bool** tablica = new bool*[n];
	int* num = new int [n];
	int* war = new int [n];
	for (int i = 0; i < n; i++) {
		tablica[i] = new bool[n];
	}
	for (int i = 0; i < n - 1; i++) {
		cin>> war[i];
	}
	for (int i = 0; i < n - 1; i++) {
		int g, z;
		cin >> g, z;
		tablica[g][z] = 1;
	}
	

}
*/
#include <iostream>
#include <queue>
using namespace std;

const int MAX_N = 100; 
bool visited[MAX_N];
int adj[MAX_N][MAX_N]; 

void BFS(int start,int n) {
	queue<int> q;
	q.push(start);
	visited[start] = true; 
	while (!q.empty()) {
		int curr = q.front();
		q.pop();
		cout << curr << " ";
		for (int i = 0; i <= n; i++) {
			if (adj[curr][i] == 1 && !visited[i]) {
				q.push(i);
				visited[i] = true;
			}
		}
	}
}

int main() {
	int n; 
	cin >> n;
	for (int i = 0; i < n - 1; i++) {
		int a, b;
		cin >> a >> b;
		adj[a][b] = 1; 
		adj[b][a] = 1; 
	}
	int start = 1; 
	BFS(start,n);
	return 0;
}


