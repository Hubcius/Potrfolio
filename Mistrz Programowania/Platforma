#include <iostream>
#include <algorithm>
#include <queue>
#include <iomanip>

using namespace std;

int main() {
    int n, q;
    cin >> n >> q;

    priority_queue<int> max_heap;
    priority_queue<int, vector<int>, greater<int>> min_heap;
    double median = 0;

    for (int i = 0; i < q; i++) {
        int a;
        cin >> a;

        if (a <= median) {
            max_heap.push(a);
        }
        else {
            min_heap.push(a);
        }

        if (max_heap.size() > min_heap.size() + 1) {
            min_heap.push(max_heap.top());
            max_heap.pop();
        }
        else if (min_heap.size() > max_heap.size() + 1) {
            max_heap.push(min_heap.top());
            min_heap.pop();
        }

        if (i % 2 == 0) {
            if (max_heap.size() > min_heap.size()) {
                median = max_heap.top();
            }
            else {
                median = min_heap.top();
            }
        }
        else {
            median = (max_heap.top() + min_heap.top()) / 2.0;
        }

        cout << fixed << setprecision(1) << median << endl;
    }

    return 0;
}
